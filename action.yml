# action.yml
name: 'Security checker'
description: 'Checks and analyzes the security of the code added to the specified repository.'
branding:
  icon: 'check-square'  
  color: 'green'

inputs:
  deptrack_enable:
    description: 'Enables Dependency Track check'
    required: true
    default: 'true'
  deptrack_url:  
    description: 'URL of OWASP Dependency Track REST API'
    required: true
    default: "${{ secrets.SECRET_OWASP_DT_URL }}"
  deptrack_key:
    description: 'Key to access OWASP Dependency Track REST API'
    required: true
    default: "${{ secrets.SECRET_OWASP_DT_KEY }}"
  deptrack_language:
    description: 'Programming language'
    required: true
    default: 'nodejs'
  code_enable:
    description: 'Enables SonarQube check'
    required: true
    default: 'true'
  sonar_project:
    description: 'SonarQube project'
    required: true
    default: '<PROJECT>'
  sonar_source:
    description: 'SonarQube source'
    required: true
    default: '.'
  sonar_host:
    description: 'SonarQube host'
    required: true
    default: "${{ secrets.SONAR_HOST_URL }}"
  sonar_login:
    description: 'SonarQube login key'
    required: true
    default: "${{ secrets.SONAR_TOKEN }}"
  sonar_exclusion:
    description: 'SonarQube exclusion'
    required: true
    default: '<TARGET>'
  config_enable:
    description: 'Enables configuration check'
    required: true
    default: 'true'
  secrets_enable:
    description: 'Enables secrets check'
    required: true
    default: 'true'
  reviewdog_github_token:
    description: 'GITHUB_TOKEN'
    required: true
    default: "${{ github.token }}"
  reviewdog_working_directory:
    description: 'Directory to run the action on, from the repo root.. Default is . ( root of the repository)'
    default: '.'
    required: true
  reviewdog_level:
    description: 'Report level for reviewdog [info,warning,error]'
    default: 'error'
    required: true
  reviewdog_reporter:
    description: 'Reporter of reviewdog command [github-pr-check,github-pr-review].. Default is github-pr-check.'
    default: 'github-pr-check'
    required: true
  reviewdog_fail_on_error:
    description: 'Exit code for reviewdog when errors are found [true,false]. Default is `false`.'
    default: 'false'
    required: true
  depcheck_project:
    description: 'Dependency check project'
    default: '<PROJECT>'
    required: true
  depcheck_path:
    description: 'Dependency check path'
    default: '.'
    required: true  
  depcheck_format:
    description: 'Dependency check format'
    default: 'HTML'
    required: true
  trivy_scan-type:
    description: 'Scan type to use for scanning vulnerability'
    required: true
    default: 'image'
  trivy_scan-ref:
    description: 'Scan reference'
    required: true
    default: '.'
  trivy_ignore-unfixed:
    description: 'ignore unfixed vulnerabilities'
    required: true
    default: 'false'
  trivy_severity:
    description: 'severities of vulnerabilities to be displayed'
    required: true
    default: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

outputs:
  riskscore:
    description: 'String with the number of vulnerabilities found'
  tfsec-return-code:
    description: 'tfsec command return code'
  reviewdog-return-code:
    description: 'reviewdog command return code'

runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.deptrack_enable }}
    - ${{ inputs.deptrack_url }}
    - ${{ inputs.deptrack_key }}
    - ${{ inputs.deptrack_language }}
    - ${{ inputs.code_enable }}
    - ${{ inputs.sonar_project }}
    - ${{ inputs.sonar_source }}
    - ${{ inputs.sonar_host }}
    - ${{ inputs.sonar_login }}
    - ${{ inputs.sonar_exclusion }}
    - ${{ inputs.config_enable }}
    - ${{ inputs.secrets_enable }}
    - ${{ inputs.reviewdog_github_token }}
    - ${{ inputs.reviewdog_working_directory }}
    - ${{ inputs.reviewdog_level }}
    - ${{ inputs.reviewdog_reporter }}
    - ${{ inputs.reviewdog_fail_on_error }}
    - ${{ inputs.depcheck_project }}
    - ${{ inputs.depcheck_path }}
    - ${{ inputs.depcheck_format }}
    - ${{ inputs.trivy_scan-ref }}
    - ${{ inputs.trivy_scan-type }}
    - ${{ inputs.trivy_ignore-unfixed }}
    - ${{ inputs.trivy_severity }}